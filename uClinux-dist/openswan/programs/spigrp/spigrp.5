.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "IPSEC_SPIGRP" 5 "" "" ""
.SH NAME
ipsec_spigrp \- list IPSEC Security Association groupings
.SH "SYNOPSIS"
.ad l
.hy 0
.HP 6
\fBipsec\fR \fIspigrp\fR
.br
 \fIcat/proc/net/ipsec_spigrp\fR
.br

.ad
.hy

.SH "OBSOLETE"

.PP
Note that spigrp is only supported on the classic KLIPS stack\&. It is not supported on any other stack and will be completely removed in future versions\&. A replacement command still needs to be designed

.SH "DESCRIPTION"

.PP
\fI/proc/net/ipsec_spigrp\fR is a read\-only file that lists groups of IPSEC Security Associations (SAs)\&.

.PP
An entry in the IPSEC extended routing table can only point (via an SAID) to one SA\&. If more than one transform must be applied to a given type of packet, this can be accomplished by setting up several SAs with the same destination address but potentially different SPIs and protocols, and grouping them with \fIipsec_spigrp(8)\fR\&.

.PP
The SA groups are listed, one line per connection/group, as a sequence of SAs to be applied (or that should have been applied, in the case of an incoming packet) from inside to outside the packet\&. An SA is identified by its SAID, which consists of protocol ("ah", "esp", "comp" or "tun"), SPI (with '\&.' for IPv4 or ':' for IPv6 prefixed hexadecimal number ) and destination address (IPv4 dotted quad or IPv6 coloned hex) prefixed by '@', in the format <proto><af><spi>@<dest>\&.

.SH "EXAMPLES"

.TP
\fItun\&.3d0@192\&.168\&.2\&.110\fR
\fIcomp\&.3d0@192\&.168\&.2\&.110\fR  \fIesp\&.187a101b@192\&.168\&.2\&.110\fR  \fIah\&.187a101a@192\&.168\&.2\&.110\fR

.PP
is a group of 3 SAs, destined for 192\&.168\&.2\&.110 with an IPv4\-in\-IPv4 tunnel SA applied first with an SPI of \fI3d0\fR in hexadecimal, followed by a Deflate compression header to compress the packet with CPI of \fI3d0\fR in hexadecimal, followed by an Encapsulating Security Payload header to encrypt the packet with SPI \fI187a101b\fR in hexadecimal, followed by an Authentication Header to authenticate the packet with SPI \fI187a101a\fR in hexadecimal, applied from inside to outside the packet\&. This could be an incoming or outgoing group, depending on the address of the local machine\&.

.TP
\fItun:3d0@3049:1::2\fR
\fIcomp:3d0@3049:1::2\fR  \fIesp:187a101b@3049:1::2\fR  \fIah:187a101a@3049:1::2\fR

.PP
is a group of 3 SAs, destined for \fI3049:1::2\fR with an IPv6\-in\-IPv6 tunnel SA applied first with an SPI of \fI3d0\fR in hexadecimal, followed by a Deflate compression header to compress the packet with CPI of \fI3d0\fR in hexadecimal, followed by an Encapsulating Security Payload header to encrypt the packet with SPI \fI187a101b\fR in hexadecimal, followed by an Authentication Header to authenticate the packet with SPI \fI187a101a\fR in hexadecimal, applied from inside to outside the packet\&. This could be an incoming or outgoing group, depending on the address of the local machine\&.

.SH "FILES"

.PP
/proc/net/ipsec_spigrp, /usr/local/bin/ipsec

.SH "SEE ALSO"

.PP
ipsec(8), ipsec_manual(8), ipsec_tncfg(5), ipsec_eroute(5), ipsec_spi(5), ipsec_klipsdebug(5), ipsec_spigrp(8), ipsec_version(5), ipsec_pf_key(5)

.SH "HISTORY"

.PP
Written for the Linux FreeS/WAN project <http://www\&.freeswan\&.org/: \fIhttp://www.freeswan.org/\fR> by Richard Guy Briggs\&.

.SH "BUGS"

.PP
:\-)

