Tcl Test Script #1 - "Check Algorithm Support":

This is a version of the test case designed to run on catfish/cassidy
rather than under the UML test bench.


   /* Part A of the test */

   /* configure the standard configuration with the following exception:
   configure DES as the IKE Phase I encryption algorithm */

   /* start IKE process and listen */

   /* return code = initiate IKE main mode negotiation */

   /* check result -> IKE Phase I should have failed due to the DUT not
      accepting DES as the encryption algorithm for Phase I */


   /* Part B of the test */

   /* configure the standard configuration (switching back to 3DES as
      Phase I encryption algorithm */

   /* may have to restart IKE process? */

   /* return code = initiate IKE main mode negotiation */

   /* check results ->
      IKE Phase I & Phase II negotiation is successful with DUT */

   /* examine Ethereal trace -> IKE messages should be encrypted */

   /* return the values negotiated for IPSec
      (i.e., IPsec encryption key, etc) */



   /* Part C of the test */

   /* configure the standard configuration with the following exception:
      configure NULL as the IKE Phase I encryption (no encryption) */

   /* may have to restart IKE process? */

   /* return code = initiate IKE main mode negotiation */

   /* check results -> IKE Phase I & Phase II negotiation is successful
   with DUT */

   /* examine Ethereal trace -> IKE messages should not be encrypted */

   /* return the values negotiated for IPSec (i.e., IPsec encryption key,
   etc) */

   /* Part D of the test */

   /* configure the standard configuration with the following exception:
   configure AES as the IKE Phase I encryption */

   /* may have to restart IKE process? */

   /* return code = initiate IKE main mode negotiation */

   /* check results -> IKE Phase I & Phase II negotiation is successful
   with DUT */

   /* examine Ethereal trace -> IKE messages should be encrypted */

   /* return the values negotiated for IPSec (i.e., IPsec encryption key,
   etc) */

