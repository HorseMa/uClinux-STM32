.TH "old_api: Calls mib module code written in the old style of code." 3 "24 Jan 2005" "net-snmp" \" -*- nroff -*-
.ad l
.nh
.SH NAME
old_api: Calls mib module code written in the old style of code. \- This is a backwards compatilibity module that allows code written in the old API to be run under the new handler based architecture.  

.PP
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBnetsnmp_mib_handler\fP * \fBget_old_api_handler\fP (void)"
.br
.RI "\fIreturns a old_api handler that should be the final calling handler. \fP"
.ti -1c
.RI "int \fBnetsnmp_register_old_api\fP (const char *moduleName, struct variable *var, size_t varsize, size_t numvars, oid *mibloc, size_t mibloclen, int priority, int range_subid, oid range_ubound, \fBnetsnmp_session\fP *ss, const char *context, int timeout, int flags)"
.br
.RI "\fIRegisters an old API set into the mib tree. \fP"
.ti -1c
.RI "int \fBnetsnmp_register_mib_table_row\fP (const char *moduleName, struct variable *var, size_t varsize, size_t numvars, oid *mibloc, size_t mibloclen, int priority, int var_subid, \fBnetsnmp_session\fP *ss, const char *context, int timeout, int flags)"
.br
.RI "\fIregisters a row within a mib table \fP"
.ti -1c
.RI "int \fBnetsnmp_old_api_helper\fP (\fBnetsnmp_mib_handler\fP *handler, \fBnetsnmp_handler_registration\fP *reginfo, \fBnetsnmp_agent_request_info\fP *reqinfo, \fBnetsnmp_request_info\fP *requests)"
.br
.RI "\fIimplements the old_api handler \fP"
.in -1c
.SH "Detailed Description"
.PP 
This is a backwards compatilibity module that allows code written in the old API to be run under the new handler based architecture. Use it by calling \fBnetsnmp_register_old_api()\fP. 
.SH "Function Documentation"
.PP 
.SS "\fBnetsnmp_mib_handler\fP* get_old_api_handler (void)"
.PP
returns a old_api handler that should be the final calling handler. Don't use this function. Use the \fBnetsnmp_register_old_api()\fP function instead. Definition at line 40 of file old_api.c.
.PP
References netsnmp_create_handler().
.PP
Referenced by netsnmp_register_mib_table_row(), and netsnmp_register_old_api().
.SS "int netsnmp_old_api_helper (\fBnetsnmp_mib_handler\fP * handler, \fBnetsnmp_handler_registration\fP * reginfo, \fBnetsnmp_agent_request_info\fP * reqinfo, \fBnetsnmp_request_info\fP * requests)"
.PP
implements the old_api handler Definition at line 229 of file old_api.c.
.PP
References netsnmp_agent_request_info_s::asp, netsnmp_handler_registration_s::handlerName, netsnmp_agent_request_info_s::mode, netsnmp_mib_handler_s::myvoid, variable_list::name, variable_list::name_length, netsnmp_create_data_list(), netsnmp_handler_registration, netsnmp_mib_handler, netsnmp_oid_equals(), netsnmp_request_add_list_data(), netsnmp_request_get_list_data(), netsnmp_set_request_error(), netsnmp_request_info_s::next, netsnmp_request_info_s::requestvb, netsnmp_handler_registration_s::rootoid, netsnmp_handler_registration_s::rootoid_len, SNMP_MALLOC_TYPEDEF, snmp_set_var_typed_value(), variable_list::type, variable_list::val, and variable_list::val_len.
.SS "int netsnmp_register_mib_table_row (const char * moduleName, struct variable * var, size_t varsize, size_t numvars, oid * mibloc, size_t mibloclen, int priority, int var_subid, \fBnetsnmp_session\fP * ss, const char * context, int timeout, int flags)"
.PP
registers a row within a mib table Definition at line 110 of file old_api.c.
.PP
References netsnmp_handler_registration_s::contextName, get_old_api_handler(), netsnmp_handler_registration_s::handler, netsnmp_handler_registration_s::handlerName, netsnmp_handler_registration_s::modes, netsnmp_mib_handler_s::myvoid, netsnmp_handler_registration, netsnmp_handler_registration_free(), netsnmp_register_handler_nocallback(), netsnmp_handler_registration_s::priority, netsnmp_handler_registration_s::range_subid, netsnmp_handler_registration_s::range_ubound, netsnmp_handler_registration_s::rootoid, netsnmp_handler_registration_s::rootoid_len, snmp_call_callbacks(), SNMP_MALLOC_TYPEDEF, and netsnmp_handler_registration_s::timeout.
.SS "int netsnmp_register_old_api (const char * moduleName, struct variable * var, size_t varsize, size_t numvars, oid * mibloc, size_t mibloclen, int priority, int range_subid, oid range_ubound, \fBnetsnmp_session\fP * ss, const char * context, int timeout, int flags)"
.PP
Registers an old API set into the mib tree. Functionally this mimics the old register_mib_context() function (and in fact the new register_mib_context() function merely calls this new old_api one). netsnmp_handler_registration_free(reginfo); already freed Definition at line 51 of file old_api.c.
.PP
References netsnmp_handler_registration_s::contextName, get_old_api_handler(), netsnmp_handler_registration_s::handler, netsnmp_handler_registration_s::handlerName, memdup(), netsnmp_handler_registration_s::modes, netsnmp_mib_handler_s::myvoid, netsnmp_handler_registration, netsnmp_register_handler(), netsnmp_handler_registration_s::priority, netsnmp_handler_registration_s::range_subid, netsnmp_handler_registration_s::range_ubound, netsnmp_handler_registration_s::rootoid, netsnmp_handler_registration_s::rootoid_len, SNMP_FREE, SNMP_MALLOC_TYPEDEF, and netsnmp_handler_registration_s::timeout.
