SMBUS_ARP Driver
-------------
This is a demonstration driver which provides SMBus 2.0
ARP services. It isn't much use except for testing SMBus 2.0
ARP and PEC support in the i2c layer.
It is NOT a normal 'chip' driver for a particular sensor device.
If you don't know what SMBus ARP is you don't need this driver.


Stability
---------
Beta.


DETECTION
-------------
This driver requires SMBus 2.0 support in i2c-2.6.4 or higher.
If your kernel does not have i2c-2.6.4 or higher the module
will refuse to load.

This driver will register itself on each i2c bus which
supports SMBus Block Data transactions.


USES
----
The module ARPs each supported bus when it is inserted
(or after that when a i2c bus driver is inserted).
It does not periodically re-ARP, and the i2c stack does not
currently support SMBus Host Notify, so it will not detect
hot-plugged devices.

The smbus-arp module should be inserted before any chip modules
so that it has an opportunity to assign addresses.


/PROC ENTRIES
-------------
There are 8 entries in /proc, 0-7. Each is a 'slot'.
If a chip has responded to ARP, it will appear in a 'slot'
as follows. See the SMBus 2.0 Specification for details.

	value	function
	1	SMBus address
	2	UDID Device Capabilities
	3	UDID Version / Revision
	4	UDID Vendor ID
	5	UDID Device ID
	6	UDID Interface
	7	UDID Subsystem Vendor ID
	8	UDID Subsystem Device ID
	9	UDID Vendor Specific ID

To reassign a device to a different address, write
that address to the slot. For example, 'echo 13 > 0'
to reassign the device in slot 0 to address 13 (0x0d).


TO DO
-----
lots

Author/Maintainer
-----------------
Mark D. Studebaker (mdsxyz123@yahoo.com)

