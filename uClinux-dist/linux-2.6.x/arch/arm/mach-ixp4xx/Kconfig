
if ARCH_IXP4XX

config ARCH_SUPPORTS_BIG_ENDIAN
	bool
	default y

menu "Intel IXP4xx Implementation Options"

comment "IXP4xx Platforms"

config MACH_NSLU2
	bool
	prompt "Linksys NSLU2"
	select PCI
	help
	  Say 'Y' here if you want your kernel to support Linksys's
	  NSLU2 NAS device. For more information on this platform,
	  see http://www.nslu2-linux.org

config MACH_AVILA
	bool "Avila"
	select PCI
	help
	  Say 'Y' here if you want your kernel to support the Gateworks
	  Avila Network Platform. For more information on this platform,
	  see <file:Documentation/arm/IXP4xx>.

config MACH_LOFT
    bool "Loft"
    depends on MACH_AVILA
    help
	  Say 'Y' here if you want your kernel to support the Giant
	  Shoulder Inc Loft board (a minor variation on the standard
	  Gateworks Avila Network Platform).

config ARCH_ADI_COYOTE
	bool "Coyote"
	select PCI
	help
	  Say 'Y' here if you want your kernel to support the ADI 
	  Engineering Coyote Gateway Reference Platform. For more
	  information on this platform, see <file:Documentation/arm/IXP4xx>.

config MACH_GATEWAY7001
	bool "Gateway 7001"
	select PCI
	help
	  Say 'Y' here if you want your kernel to support Gateway's
	  7001 Access Point. For more information on this platform,
	  see http://openwrt.org

config MACH_WG302V2
	bool "Netgear WG302 v2 / WAG302 v2"
	select PCI
	help
	  Say 'Y' here if you want your kernel to support Netgear's
	  WG302 v2 or WAG302 v2 Access Points. For more information
	  on this platform, see http://openwrt.org

config ARCH_IXDP425
	bool "IXDP425"
	help
	  Say 'Y' here if you want your kernel to support Intel's 
	  IXDP425 Development Platform (Also known as Richfield).  
	  For more information on this platform, see <file:Documentation/arm/IXP4xx>.

config MACH_IXDPG425
	bool "IXDPG425"
	help
	  Say 'Y' here if you want your kernel to support Intel's
	  IXDPG425 Development Platform (Also known as Montajade).
	  For more information on this platform, see <file:Documentation/arm/IXP4xx>.

config MACH_IXDP465
	bool "IXDP465"
	help
	  Say 'Y' here if you want your kernel to support Intel's
	  IXDP465 Development Platform (Also known as BMP).
	  For more information on this platform, see <file:Documentation/arm/IXP4xx>.

config MACH_KIXRP435
	bool "KIXRP435"
	help
	  Say 'Y' here if you want your kernel to support Intel's
	  KIXRP435 Reference Platform.
	  For more information on this platform, see <file:Documentation/arm/IXP4xx>.

#
# IXCDP1100 is the exact same HW as IXDP425, but with a different machine 
# number from the bootloader due to marketing monkeys, so we just enable it 
# by default if IXDP425 is enabled.
#
config ARCH_IXCDP1100
	bool 
	depends on ARCH_IXDP425
	select DMABOUNCE
	select PCI
	default y

config ARCH_PRPMC1100
	bool "PrPMC1100"
	select DMABOUNCE
	select PCI
	help
	  Say 'Y' here if you want your kernel to support the Motorola
	  PrPCM1100 Processor Mezanine Module. For more information on
	  this platform, see <file:Documentation/arm/IXP4xx>.

config ARCH_SE4000
	bool "SnapGear SE4000"
	select DMABOUNCE
	select PCI
	depends on ARCH_IXP4XX
	help
	  Support for SnapGear SE4000 VPN Router.

config MACH_SG560
	bool "SnapGear SG560"
	depends on ARCH_IXP4XX
	help
	  Support for SnapGear SG560 VPN Router.

config MACH_SG560USB
	bool "SnapGear SG560-USB"
	depends on ARCH_IXP4XX
	help
	  Support for SnapGear SG560-USB VPN Router.

config MACH_SG560ADSL
	bool "SnapGear SG560-ADSL"
	depends on ARCH_IXP4XX
	help
	  Support for SnapGear SG560-ADSL VPN Router.

config MACH_SG565
	bool "SnapGear SG565"
	select DMABOUNCE
	select PCI
	depends on ARCH_IXP4XX
	help
	  Support for SnapGear SG565 VPN Router.

config MACH_SG580
	bool "SnapGear SG580"
	depends on ARCH_IXP4XX
	help
	  Support for SnapGear SG580 VPN Router.

config MACH_SG590
	bool "SecureComputing SG590"
	select DMABOUNCE
	select PCI
	depends on ARCH_IXP4XX
	help
	  Support for Secure Computing SG590 VPN Router.

config MACH_SG640
	bool "SecureComputing SG640"
	depends on ARCH_IXP4XX
	help
	  Support for SecureComputing SG640 PCI Router.

config MACH_SGARMAUTO
	bool "SecureComputing 'AutoSelect' ARM Platform"
	depends on ARCH_IXP4XX
	help
	  Support for SecureComputing generic ARM platform based on IXP4XX.

config MACH_ESS710
	bool "SnapGear SG710"
	select DMABOUNCE
	select PCI
	depends on ARCH_IXP4XX
	help
	  Support for SnapGear SG710 VPN Router.

config MACH_SG720
	bool "SnapGear SG720"
	select DMABOUNCE
	select PCI
	depends on ARCH_IXP4XX
	help
	  Support for SnapGear SG720 VPN Router.

config MACH_SG8100
	bool "SecureComputing SG8100"
	select PCI
	depends on ARCH_IXP4XX
	help
	  Support for Secure Computing SG8100 Internet VPN Router.

config MACH_NAS100D
	bool
	prompt "NAS100D"
	select PCI
	help
	  Say 'Y' here if you want your kernel to support Iomega's
	  NAS 100d device. For more information on this platform,
	  see http://www.nslu2-linux.org/wiki/NAS100d/HomePage

config MACH_DSMG600
	bool
	prompt "D-Link DSM-G600 RevA"
	select PCI
	help
	  Say 'Y' here if you want your kernel to support D-Link's
	  DSM-G600 RevA device. For more information on this platform,
	  see http://www.nslu2-linux.org/wiki/DSMG600/HomePage

config	ARCH_IXDP4XX
	bool
	depends on ARCH_IXDP425 || MACH_IXDP465 || MACH_KIXRP435
	default y

#
# Certain registers and IRQs are only enabled if supporting IXP465 CPUs
#
config CPU_IXP46X
	bool
	depends on MACH_IXDP465 || MACH_SG590 || MACH_SG720
	default y

config CPU_IXP43X
	bool
	depends on MACH_KIXRP435
	default y

config MACH_GTWX5715
	bool "Gemtek WX5715 (Linksys WRV54G)"
	depends on ARCH_IXP4XX
	select PCI
	help
		This board is currently inside the Linksys WRV54G Gateways.

		IXP425 - 266mhz
		32mb SDRAM
		8mb Flash
		miniPCI slot 0 does not have a card connector soldered to the board
		miniPCI slot 1 has an ISL3880 802.11g card (Prism54)
		npe0 is connected to a Kendin KS8995M Switch (4 ports)
		npe1 is the "wan" port
		"Console" UART is available on J11 as console
		"High Speed" UART is n/c (as far as I can tell)
		20 Pin ARM/Xscale JTAG interface on J2

comment "IXP4xx Options"

config DMABOUNCE
	bool
	default y
	depends on PCI

config IXP4XX_INDIRECT_PCI
	bool "Use indirect PCI memory access"
	depends on PCI
	help
          IXP4xx provides two methods of accessing PCI memory space:

          1) A direct mapped window from 0x48000000 to 0x4bffffff (64MB).
             To access PCI via this space, we simply ioremap() the BAR
             into the kernel and we can use the standard read[bwl]/write[bwl]
             macros. This is the preferred method due to speed but it
             limits the system to just 64MB of PCI memory. This can be 
             problematic if using video cards and other memory-heavy devices.
          
          2) If > 64MB of memory space is required, the IXP4xx can be 
	     configured to use indirect registers to access PCI This allows 
	     for up to 128MB (0x48000000 to 0x4fffffff) of memory on the bus. 
	     The disadvantage of this is that every PCI access requires 
	     three local register accesses plus a spinlock, but in some 
	     cases the performance hit is acceptable. In addition, you cannot 
	     mmap() PCI devices in this case due to the indirect nature
	     of the PCI window.

	  By default, the direct method is used. Choose this option if you
	  need to use the indirect method instead. If you don't know
	  what you need, leave this option unselected.

config IXP4XX_QMGR
	tristate "IXP4xx Queue Manager support"
	help
	  This driver supports IXP4xx built-in hardware queue manager
	  and is automatically selected by Ethernet and HSS drivers.

config IXP4XX_NPE
	tristate "IXP4xx Network Processor Engine support"
	select HOTPLUG
	select FW_LOADER
	help
	  This driver supports IXP4xx built-in network coprocessors
	  and is automatically selected by Ethernet and HSS drivers.

config IXP4XX_CLOCK_FORCE
	bool "Select the master clock frequency"
	depends on ARCH_IXP4XX
	help
	  Some hardware platforms using the IXP4XX CPU family use a non-
	  standard clock frequency. Select this option so you can specify
	  the actual clock frequency input to the CPU.
	
config IXP4XX_CLOCK
	int "Select the core clock frequency"
	default "66666666"
	depends on IXP4XX_CLOCK_FORCE
	help
	  You can set the actual CPU master clock frequency here, so that
	  you get accurate kernel timing. For example some platforms use a
	  66MHz crystal instead of a 66.666666MHz.

config IXP4XX_DEBUG_FIQ
	bool "Select IXP4XX button FIQ debug support"
	default n
	help
	  Enable the Factory "Erase" switch on the SnapGear hardware
	  platforms to be a debug FIQ. When pushed it will dump the
	  PC address that it interrupted. Useful for debugging hang and
	  lockup conditions since the FIQ can and will interrupt on top
	  of standard interrupts and when standard interrupts are locked
	  out.

endmenu

endif
