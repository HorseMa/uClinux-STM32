#
# For a description of the syntax of this configuration file,
# see the Configure script.
#
mainmenu 'uClinux/Nios2 (w/o MMU) Kernel Configuration'

config MMU
	bool
	default n

config FPU
	bool
	default n

config ZONE_DMA
	bool
	default y

config NO_DMA
	bool
	default y

config UID16
	bool
	default y

config RWSEM_GENERIC_SPINLOCK
	bool
	default y

config RWSEM_XCHGADD_ALGORITHM
	bool
	default n

config GENERIC_FIND_NEXT_BIT
	bool
	default y

config GENERIC_HWEIGHT
	bool
	default y

config GENERIC_CALIBRATE_DELAY
	bool
	default y

config GENERIC_TIME
	bool
	default y

config HOTPLUG_CPU
	bool
	default n

config ARCH_SUPPORTS_AOUT
	def_bool y

source "init/Kconfig"

menu "Processor type and features"

comment 'Platform dependant setup'

source "kernel/time/Kconfig"

choice
	prompt "CPU"
	default NIOS2

config NIOS2
	bool "NIOS2"
	help
	  Altera Nios2 softcore processor.

endchoice

choice
	prompt "Platform"
	default ALTERA_STRATIX

config MICROTRONIX_UKIT
	bool "Microtronix uKit board support"
	depends on NIOS2
	help
	  Support for the Microtronix uKit development board. Includes support 
	  for Sodimm SDRAM/FLASH, soft ethernet MAC & PHY.

config MICROTRONIX_STRATIX
	bool "Microtronix Stratix board support"
	depends on NIOS2
	help
	  Support for the Microtronix Stratix board. Includes support 
	  for Sodimm SDRAM/FLASH, soft ethernet MAC & PHY, USB, LVDS
	  & analog/digital converters.

config MICROTRONIX_CYCLONE
	bool "Microtronix Cyclone board support"
	depends on NIOS2
	help
	  Support for the Microtronix Cyclone board. Includes support 
	  for SDRAM, FLASH, soft ethernet MAC & PHY, USB,
	  & analog/digital converters.

config MICROTRONIX_PSK
	bool "Microtronix PSK (Product Starter Kit) support"
	depends on NIOS2
	help
	  Support for the Microtronix PSK (Product Starter Kit), which
	  features firefly module (EP1C4 or EP1C12). Includes support 
	  for SDRAM, FLASH, and a variety of product expansion kits such
	  as USB, Ethernet etc.

config ALTERA_STRATIX
	bool "Altera Stratix Development board support"
	depends on NIOS2
	help
	  Support for the Altera Stratix Development board. Includes
	  support for 10/100 ethernet, FLASH, SDRAM, compact flash.

config ALTERA_STRATIX_PRO
	bool "Altera Stratix Pro Development board support"
	depends on NIOS2
	help
	  Support for the Altera Stratix 1s40 Development board. Includes
	  support for 10/100 ethernet, FLASH, SDRAM, compact flash.

config ALTERA_STRATIX_II
	bool "Altera Stratix II Development board support"
	depends on NIOS2
	help
	  Support for the Altera Stratix II Development board. Includes
	  support for 10/100 ethernet, FLASH, SDRAM, compact flash.

config ALTERA_CYCLONE
	bool "Altera Cyclone Development board support"
	depends on NIOS2
	help
	  Support for the Altera Cyclone Development board. Includes
	  support for 10/100 ethernet, FLASH, SDRAM, compact flash.

config ALTERA_CYCLONE_1C12_EVAL
	bool "Altera Cyclone 1C12 Evaluation board support"
	depends on NIOS2
	help
	  Support for the Altera Cyclone 1C12 Evaluation board (with the
	  embedded processor module).

config ALTERA_DE2
	bool "Altera DE2 Development board support"
	depends on NIOS2
	help
	  Support for the Altera Cyclone Development board. Includes
	  support for 10/100 ethernet, FLASH, SDRAM, VGA, I2C.

endchoice

choice
	prompt "Nios II Hardware Multiply Support"
	default NIOS2_HW_MULX
	help
	  This option enables various assembler instructions based on your
	  selection.  The choice depends on what target hardware you'll be
	  running your applications on.  The default is 
	  "Enable mulx instruction".
	  
	  Here is an explanation of each option:
	  None = -mno-hw-mul -mno-hw-mulx
	   (no mul or mulx instructions used)
	  Enable mul instruction = -mhw-mul -mno-hw-mulx 
	   (use mul instructions)
	  Enable mul and mulx instructions = -mhw-mul -mhw-mulx
	   (use mul and mulx instructions)
	  
	  If you don't know what to choose, select "Enable mulx instruction".
	
config NIOS2_HW_MUL_OFF
	bool "None"

config NIOS2_HW_MUL
	bool "Enable mul instruction"

config NIOS2_HW_MULX
	bool "Enable mul and mulx instructions"
	
endchoice

comment 'Platform drivers Options'

config AVALON_DMA
	bool "Support of DMA controller with Avalon interface"
	default y
	help
	  This enables support of Altera's DMA controller with Avalon
	  interface, so that drivers of DMA-able device can use this 
	  interface.
	
config PIO_DEVICES
	bool "Enable leds, seven segment display"
	default y
	depends on (ALTERA_STRATIX || ALTERA_STRATIX_PRO || ALTERA_CYCLONE)
	help
	  This enables example code to support leds, and seven segment
	  display as PIO devices. Once enabled, the kernel will show a
	  counter (increas once a second) on these devices.

source "arch/nios2nommu/drivers/Kconfig"

comment 'Miscellaneous Options'

config EXCALIBUR
	bool
	default y
	depends on (NIOS2)

config BREAK_ON_START
	bool "Include breakpoint trap on kernel startup"
	help
	  Configures the kernel to trap to the GDB client on startup
	  before the kernel starts initialization. This allows you to
	  debug the kernel startup.

config FORCE_MAX_ZONEORDER
	int
	default "14" 

choice
	prompt "Kernel executes from"
	---help---
	  Choose the memory type that the kernel will be running in.

config RAMKERNEL
	bool "RAM"
	help
	  The kernel will be resident in RAM when running.

#config ROMKERNEL
#	bool "ROM"
#	help
#	  The kernel will be resident in FLASH/ROM when running.

#config HIMEMKERNEL
#	bool "HIMEM"
#	help
#	  The kernel will be resident in high memory when running.

endchoice

source "kernel/Kconfig.preempt"

source kernel/Kconfig.hz

config CMDLINE
	string "Default kernel command string"
	default "CONSOLE=/dev/ttyS0 root=/dev/rom0 ro"
	help
	  On some architectures, there is currently no way
	  for the boot loader to pass arguments to the kernel. For these
	  architectures, you should supply some command-line options at build
	  time by entering them here. As a minimum, you should specify the
	  memory size and the root device (e.g., mem=64M root=/dev/nfs).

config PASS_CMDLINE
	bool "Passed kernel command line from u-boot"
	default n
	help
	  Use bootargs env variable from u-boot for kernel command line.
	  will override "Default kernel command string".
          Say N if you are unsure.

source "mm/Kconfig"

config BOOT_LINK_OFFSET
	hex "Link address offset for booting"
	default "0x00500000"
	help
	  This option allows you to set the link address offset of the zImage.
	  This can be useful if you are on a board which has a small amount of
	  memory.

endmenu

menu "Bus options (PCI, PCMCIA, EISA, MCA, ISA)"

config PCI
	bool "PCI support"
	help
	  Support for PCI bus.

source "drivers/pci/Kconfig"

config HOTPLUG
	bool "Support for hot-pluggable device"
	  help
	  Say Y here if you want to plug devices into your computer while
	  the system is running, and be able to use them quickly.  In many
	  cases, the devices can likewise be unplugged at any time too.

	  One well known example of this is PCMCIA- or PC-cards, credit-card
	  size devices such as network cards, modems or hard drives which are
	  plugged into slots found on all modern laptop computers.  Another
	  example, used on modern desktops as well as laptops, is USB.

	  Enable HOTPLUG and KMOD, and build a modular kernel.  Get agent
	  software (at <http://linux-hotplug.sourceforge.net/>) and install it.
	  Then your kernel will automatically call out to a user mode "policy
	  agent" (/sbin/hotplug) to load modules and set up software needed
	  to use devices as you hotplug them.

source "drivers/pcmcia/Kconfig"

source "drivers/pci/hotplug/Kconfig"

endmenu

menu "Executable file formats"

source "fs/Kconfig.binfmt"

endmenu

menu "Power management options"

source "kernel/power/Kconfig"

endmenu

source "net/Kconfig"

source "drivers/Kconfig"

source "fs/Kconfig"

source "arch/nios2nommu/Kconfig.debug"

source "security/Kconfig"

source "crypto/Kconfig"

source "lib/Kconfig"
